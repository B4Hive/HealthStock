@startuml HealthStock

class Fornecedor {
  - id : int
  - nome : String
  - cnpj : String
  - telefone : String
  - endereco : String
  - email : String
  + {static} carregar (fornecedor : String) : Fornecedor
  + {static} salvar (fornecedor : Fornecedor) : String
}

class Produto {
  - id : int
  - nome : String
  - quantidade : int
  - idFornecedor : int
  + {static} carregar (produto : String) : Produto
  + {static} salvar (produto : Produto) : String
}

class Medicacao {
  - lote : String
  - validade : Date
  - ultimoResponsavel : String
  - ultimaMovimentacao : Date
  + verificarValidade () : boolean
  + movimentacao (responsavel : String)
  + {static} carregar (medicacao : String) : Medicacao
  + {static} salvar (medicacao : Medicacao) : String
}

class Estoque {
  - produtos : List<Produto>
  + adicionarProduto (produto : Produto)
  + retirarProduto (id : int, qtd : int) : Produto
  + listarProdutos () : Map<Integer, String>
  + getProduto (id : int) : Produto
}

class Pedido {
  - setorOrigem : String
  - setorDestino : String
  - dataPedido : Date
  - produto : String
  - quantidade : int
  - estado : String

  + {static} carregar (pedido : String) : Pedido
  + {static} salvar (pedido : Pedido) : String
}

class Setor {
  - nome : String
  - senha : String
  - pedidos : List<Pedido>
  - estoque : Estoque

  + validarSenha (senha : String) : boolean

  + gerarPedido (idProduto : int, qtd : int)
  + adicionarPedido (pedido : Pedido)
  + listarPedidos () : List<String>
  + listarPedidosPorEstado (estado : String) : List<String>
  + aprovarPedido (nPedido : int, resposta : boolean) : boolean 

  + entradaProduto (produto : Produto)
  + retiradaProduto (id : int, qtd : int) : Produto
  + consumirProduto (id : int, qtd : int)

  + {static} carregar (nomeArquivo : String) : Setor
  + {static} salvar (setor : Setor) : void
}

class SetorEntrada {
  + distribuirEntrada (produto : Produto)
}

class SetorCadastro {
  - cadastroFornecedor (fornecedor : Fornecedor)
  - cadastroProduto (nome : String, tipo : String)
  + listarFornecedores () : List<Fornecedor>
  + getFornecedor (id : int) : Fornecedor
}

Setor <|-- SetorEntrada : é um(a)

Setor <|-- SetorCadastro : é um(a)

Produto <|-- Medicacao : é um(a)

Produto o-- "1" Fornecedor : possui

Setor o-- "1" Estoque : possui

Setor --> Pedido : gera

Setor o-- "0..*" Pedido : possui

Estoque o-- "0..*" Produto : possui

SetorCadastro --> Fornecedor : cadastra

note top of SetorCadastro
  Setor de compras
end note

note bottom of SetorEntrada
  Almoxarifado
end note

@enduml